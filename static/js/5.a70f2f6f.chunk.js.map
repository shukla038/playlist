{"version":3,"sources":["Config/apiConfig.js","Container/HomePage/actions.js","Components/Header/Header.js","Container/HomePage/HomePage.js","Container/HomePage/index.js"],"names":["api","GETPOST","getPostsListAsync","dispatch","getState","axios","get","proxy","host","port","then","response","payload","data","status","type","POSTS_LIST","catch","err","Header","className","map","index","href","onClick","props","history","push","React","Component","HomePage","handleCard","obj","dummyArray","window","scroll","TrailerURL","split","i","length","document","getElementById","this","key","Data","hasOwnProperty","Fragment","location","search","width","height","src","id","EventImageCode","connect","state","postsList","bindActionCreators"],"mappings":"+myBAAaA,EACH,CACFC,QAAO,mE,iBCUR,IAAMC,EAAoB,WAC7B,OAAO,SAACC,EAAUC,GACd,OAAOC,IAAMC,IAAIN,EAAUC,QAAQ,CAAC,QAAU,CAAC,8BAAgC,IAAK,aAAc,GAClGM,MAAO,CACHC,KAAM,mBACNC,KAAM,OAGZC,KACM,SAAAC,GAjBL,IAAsBC,EAmBTD,GAAYA,EAASE,MAA4B,MAApBF,EAASG,QACtCX,GApBSS,EAoBaD,EAASE,KAnBxC,CACHE,KAAMC,IACNJ,eAoBEK,MAAM,SAAAC,GACJ,MAAMA,M,+DCTHC,G,uLAfH,IAAD,OAEP,OACI,yBAAKC,UAAU,UAFL,CAAC,KAAM,SAAU,SAAS,OAAQ,WAGnCC,IAAI,SAACR,EAAMS,GAAP,OACX,uBAAGC,MAAI,EAACH,UAAU,SAASI,QAAU,kBAAK,EAAKC,MAAMC,QAAQC,KAAK,WAAWd,KAE3E,yBAAKO,UAAU,gBACX,uBAAGG,MAAI,EAACC,QAAU,kBAAK,EAAKC,MAAMC,QAAQC,KAAK,OAA/C,gB,GATKC,IAAMC,Y,gBCiDZC,E,2MA1CXC,WAAa,SAACC,EAAKV,EAAOW,GACtBC,OAAOC,OAAO,EAAE,GAChB,EAAKV,MAAMC,QAAQC,KAAnB,gBAAiCK,EAAII,WAAWC,MAAM,KAAK,KAC3D,IAAI,IAAIC,EAAE,EAAGA,EAAIL,EAAWM,OAAQD,IAChCE,SAASC,eAAT,eAAgCH,IAAKlB,UAAW,iBAEpDoB,SAASC,eAAT,eAAgCnB,IAASF,UAAW,iB,mFARpDsB,KAAKjB,MAAMvB,sB,+BAUL,IAAD,OACGwB,EAAYgB,KAAKjB,MAAjBC,QACJO,EAAa,GAClB,IAAI,IAAIU,KAAOC,IACNA,IAAQC,eAAeF,IACvBV,EAAWN,KAAKiB,IAAQD,IAGhC,OACI,kBAAC,IAAMG,SAAP,KACI,kBAAC,EAAD,CAAQpB,QAASA,IAChBQ,OAAOa,SAASC,OACb,yBAAK5B,UAAU,iBACX,4BAAQ6B,MAAO,MAAOC,OAAO,MACzBC,IAAG,wCAAmCjB,OAAOa,SAASC,OAAOX,MAAM,KAAK,GAArE,kBAEF,GACb,yBAAKjB,UAAU,kBACVa,EAAWZ,IAAI,SAACW,EAAKV,GAAN,OACX,yBAAKqB,IAAG,yBAAoBrB,GACzBF,UAAU,eAAeI,QAAS,kBAAM,EAAKO,WAAWC,EAAKV,EAAOW,KACpE,yBAAKb,UAAS,QAAWgC,GAAE,eAAU9B,GACjC6B,IAAG,iDAA4CnB,EAAIqB,eAAhD,mB,GAlCZzB,IAAMC,WCUdyB,sBAXS,SAACC,GACrB,MAAO,CACLC,UAAWD,IAGU,SAACpD,GACxB,OAAOsD,YAAmB,CACtBvD,qBACDC,IAGQmD,CAA6CxB","file":"static/js/5.a70f2f6f.chunk.js","sourcesContent":["export const api = {\n    posts:{\n        GETPOST : `https://in.bookmyshow.com/serv/getData?cmd=GETTRAILERS&mtype=cs`,\n    }\n} ","import { POSTS_LIST } from './constants'\nimport { api } from 'Config/apiConfig.js'\nimport axios from 'axios';\n\nexport function getPostsList(payload) {\n    return {\n        type: POSTS_LIST,\n        payload\n    };\n}\n\n//Action dispatcher\nexport const getPostsListAsync = () => {\n    return (dispatch, getState) => {\n        return axios.get(api.posts.GETPOST,{'headers':{'Access-Control-Allow-Origin' : '*', 'crossDomain':true },\n        proxy: {\n            host: 'http://localhost',\n            port: 3000\n          }\n    }\n    ).then(\n            response => {\n                debugger\n                if (response && response.data && response.status === 200) {\n                    dispatch(getPostsList(response.data))\n                }\n            }\n        ).catch(err => {\n            throw err\n        })\n    }\n}\n\n","import React from 'react';\nimport './style.scss';\n\nclass Header extends React.Component {\n  render() {\n    var navData = ['TV', 'MOVIES', 'SPORTS','NEWS', 'PREMIUM']\n    return (\n        <div className='header'>\n        {navData.map((data, index)=>\n          <a href className='active' onClick={ ()=> this.props.history.push('/home')}>{data}</a>\n          )}\n            <div className='header-right'>\n                <a href onClick={ ()=> this.props.history.push('/')}>Logout</a>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport Header from 'Components/Header'\nimport PropTypes from 'prop-types';\nimport './HomePage.scss';\nimport * as Data from 'Container/HomePage/data'\n\nclass HomePage extends React.Component {\n    componentDidMount() {\n        this.props.getPostsListAsync()\n    }\n    handleCard = (obj, index, dummyArray) => {\n        window.scroll(0,0)\n        this.props.history.push(`/home?${obj.TrailerURL.split('=')[1]}`)\n        for(var i=0; i < dummyArray.length; i++){\n            document.getElementById(`card-${i}`).className= 'reset--styling'\n        }\n        document.getElementById(`card-${index}`).className= 'selected--box'\n    }\n    render() {\n        const { history } = this.props\n        var dummyArray = []\n       for(var key in Data[0]){\n            if (Data[0].hasOwnProperty(key)){\n                dummyArray.push(Data[0][key])\n        }\n        }\n        return (\n            <React.Fragment>\n                <Header history={history} />\n                {window.location.search ?\n                    <div className='traier--video'>\n                        <iframe width={'50%'} height=\"345\"\n                            src={`https://www.youtube.com/embed/${window.location.search.split('?')[1]}?autoplay=1`}>\n                        </iframe>\n                    </div> : ''}\n                <div className='flex-container'>\n                    {dummyArray.map((obj, index) =>\n                        (<div key={`card--wrapper--${index}`}\n                            className='card-wrapper' onClick={() => this.handleCard(obj, index, dummyArray)}>\n                            <img className={`class`} id={`card-${index}`}\n                                src={`https://in.bmscdn.com/events/moviecard/${obj.EventImageCode}.jpg`} />\n                        </div>)\n                    )\n                    }\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nHomePage.propTypes = {\n    getPostsListAsync : PropTypes.func.isRequired\n}\nexport default HomePage;\n\n\n","import { connect } from 'react-redux'\nimport { getPostsListAsync } from './actions'\nimport { bindActionCreators } from 'redux'\nimport HomePage from './HomePage'\n\nconst mapStateToProps = (state) => {\n    return {\n      postsList: state,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        getPostsListAsync\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)"],"sourceRoot":""}